[
    { "keys": ["ctrl+enter"], "command": "insert", "args": {"characters": "\n"} },
    { "keys": ["shift+enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line.sublime-macro"} },
    { "keys": ["alt+up"], "command": "swap_line_up" },
    { "keys": ["alt+down"], "command": "swap_line_down" },
    { "keys": ["alt+m"], "command": "toggle_minimap" },
    { "keys": ["f5"], "command": "toggle_setting", "args": {"setting": "word_wrap"}},
    // Go to left bracket
    {
        "keys": ["ctrl+alt+super+up"],
        "command": "bh_key",
        "args":
        {
            "no_outside_adj": true,
            "lines" : true,
            "plugin":
            {
                "type": ["__all__"],
                "command": "bh_modules.bracketselect",
                "args": {"select": "left"}
            }
        }
    },
    // Go to right bracket
    {
        "keys": ["ctrl+alt+super+down"],
        "command": "bh_key",
        "args":
        {
            "no_outside_adj": true,
            "lines" : true,
            "plugin":
            {
                "type": ["__all__"],
                "command": "bh_modules.bracketselect",
                "args": {"select": "right"}
            }
        }
    },
    // Remove brackets
    {
        "keys": ["ctrl+alt+super+r"],
        "command": "bh_remove_brackets"
    },
    // Select text between brackets
    {
        "no_outside_adj": true,
        "keys": ["ctrl+alt+super+s"],
        "command": "bh_key",
        "args":
        {
            "lines" : true,
            "plugin":
            {
                "type": ["__all__"],
                "command": "bh_modules.bracketselect"
            }
        }
    },
    // Select text including brackets
    {
        "keys": ["ctrl+alt+super+d"],
        "command": "bh_key",
        "args":
        {
            "no_outside_adj": true,
            "lines" : true,
            "plugin":
            {
                "type": ["__all__"],
                "command": "bh_modules.bracketselect",
                "args": {"always_include_brackets": true}
            }
        }
    },
    // Select tag name of HTML/XML tag (both opening name and closing)
    {
        "keys": ["ctrl+alt+super+t"],
        "command": "bh_key",
        "args":
        {
            "plugin":
            {
                "type": ["cfml", "html", "angle"],
                "command": "bh_modules.tagnameselect"
            }
        }
    },
    // Select the attribute to the right of the cursor (will wrap inside the tag)
    {
        "keys": ["ctrl+alt+super+right"],
        "command": "bh_key",
        "args":
        {
            "plugin":
            {
                "type": ["cfml", "html", "angle"],
                "command": "bh_modules.tagattrselect",
                "args": {"direction": "right"}
            }
        }
    },
    // Select the attribute to the left of the cursor (will wrap inside the tag)
    {
        "keys": ["ctrl+alt+super+left"],
        "command": "bh_key",
        "args":
        {
            "plugin":
            {
                "type": ["cfml", "html", "angle"],
                "command": "bh_modules.tagattrselect",
                "args": {"direction": "left"}
            }
        }
    },
    // Convert single quote string to double quoted string and vice versa
    // Will handle escaping or unescaping quotes within the string
    {
        "keys": ["ctrl+alt+super+q"],
        "command": "bh_key",
        "args":
        {
            "lines" : true,
            "plugin":
            {
                "type": ["single_quote", "double_quote", "py_single_quote", "py_double_quote"],
                "command": "bh_modules.swapquotes"
            }
        }
    },
    // Fold contents between brackets
    {
        "keys": ["ctrl+alt+super+["],
        "command": "bh_key",
        "args":
        {
            "plugin": {
                "type": ["__all__"],
                "command" : "bh_modules.foldbracket"
            }
        }
    },
    // Swap brackets with another type
    {
        "keys": ["ctrl+alt+super+e"],
        "command": "swap_brackets"
    },
    // Surround selection with brackets from quick panel
    {
        "keys": ["ctrl+alt+super+w"],
        "command": "wrap_brackets"
    },
    // Toggle high visibility mode
    {
        "keys": ["ctrl+alt+super+v"],
        "command": "bh_toggle_high_visibility"
    },
    // Run tests on current file
    {
        "keys": ["f8"],
        "command": "anaconda_run_current_file_tests"
    },
    // Run all tests
    {
        "keys": ["ctrl+f8"],
        "command": "anaconda_run_last_test"
    },
    // Run last test
    {
        "keys": ["ctrl+shift+f8"],
        "command": "anaconda_run_project_tests"
    },
    {
        "keys": ["ctrl+,", "i"],
        "command": "repl_open",
        "args": {
            "type": "subprocess",
            "encoding": "utf8",
            "autocomplete_server": true,
            "cmd": {
                "osx": ["python", "-u", "${packages}/SublimeREPL/config/Python/ipy_repl.py"],
                "linux": ["python", "-u", "${packages}/SublimeREPL/config/Python/ipy_repl.py"],
                "windows": ["python", "-u", "${packages}/SublimeREPL/config/Python/ipy_repl.py"]
            },
            "cwd": "$file_path",
            "syntax": "Packages/Python/Python.tmLanguage",
            "external_id": "python",
            "extend_env": {
                "PYTHONIOENCODING": "utf-8",
                "SUBLIMEREPL_EDITOR": "$editor"
            }
        }
    },
    { "keys": ["ctrl+alt+pageup"], "command": "focus_neighboring_group", "args": {"forward": false} },
    { "keys": ["ctrl+alt+pagedown"], "command": "focus_neighboring_group" },
    { "keys": ["ctrl+alt+left"], "command": "move_to_neighboring_group", "args": {"forward": false} },
    { "keys": ["ctrl+alt+right"], "command": "move_to_neighboring_group" },
    { "keys": ["ctrl+shift+pagedown"], "command": "new_pane" },
]
